Сортировка поиска информации. Простые методы внутренней сортировки. Рекуррентные выражения. Рекурсия.
Поиск – это обработка некоторого множества с целью выявления подмножества, соответствующего критерия поиска.
Делятся на:
1.Поиск в неупорядоченном множестве данных.
2. Поиск в упорядоченном множестве данных.
Упорядоченность – это наличие отсортированного ключевого поля.
Сортировка – это перестановка элементов подмножества данных, по какому либо критерию, в качестве критерия исп. Некоторое числовое поле, называемое ключевым.
Если ключевое поле каждого последующего элемента не меньше предыдущего, то говорят о сортировки по возрастанию.
Цель сортировки облегчить последующий поиск элементов в отсортированном множестве при обработке данных.
Все алгоритмы отсортировки делятся на:
1. Алгоритмы внутренней сортировки.
2. Алгоритмы внешней сортировки (сортировках файлов).
Сортировка массивов
Основным критерием, предъявляемым к алгоритмам массивов явл. Минимизация исп. Оперативной памяти, перестановки элементов нужно выполнять на том же месте оперативной памяти где они находятся, и методы которые пересылают элементы из массива a в массив b не представляют интереса.
Методы сортировки массивов:
1. Сортировка вставками.
2. Сортировка выбора.
3. Пузырьковая сортировка.
Основным требованиям внутренней сортировки явл. Жесткая экономия памяти. Доступ к любому элементу массива осуществляется по индексу.
Сортировка вставками – суть сортировки:
1. Перебираются элементы в неотсортированной части массива.
2. Каждый элемент вставляется в отсортированную часть массива на то место где он должен находиться.

Необходимо пройтись по массиву слева на право и обрабатывать по очереди каждый элемент.
Слева от очередного элемента наращиваем отсортированную часть массива, с права по мере процесса потихоньку испаряются не отсортированная часть.
В отсортированной части массива ищется точка ставки для очередного элемента.
Сам элемент отправляется в буфер.
Пример:
7 6 3 1 2 4 5
6 7 3 1 2 4 5
3 6 7 1 2 4 5
1 3 6 7 2 4 5
1 2 3 4 6 7 5
1 2 3 4 5 6 7
Сортировка выбора начинается с поиска минимального элемента массива, который обменивается затем с первым элементом.
Сортировка выбора лучше чем сортировка с вставками однако начальная частичная сортировка не уменьшает трудоемкость метода .
Шаги и алгоритмы:
1. Находим номер минимального значения в текущем списке.
2. Производим обмен этого значения с значением первой неотсортированной позиции
3. Сортируем хвост списка, исключив из рассмотрения сортированные элементы.
Для реализации.
Int mass[5];
Int temp, index, min;
For(int I = 0; i<5; i++){
Cin » mass[i];}
For (int i=0; i<5; I++){
Min = I;}
For (int j = 1; j<5; J++){
if (mass [j] <mass [min]{
Min = j; }}
Temp = mass [i]
mass [i] = mass [min];
mass [ min] = temp;}
for (int I = 0; i<5; i++){
cout «mass [i] «” “;}}
Алгоритм пузырьковой сортировки состоит в повторении проходов по массиву с помощью вложенных циклов.
При каждом проходе по массиву, сравнивается между собой пару соседних элементов.